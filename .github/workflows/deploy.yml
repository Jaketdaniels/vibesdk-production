name: Deploy to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy to Cloudflare Workers

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Generate Cloudflare types
        run: bun run cf-typegen
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Run prebuild
        run: bun run prebuild

      - name: Build project
        run: bun run build

      - name: Create production secrets file
        run: |
          cat > .prod.vars << EOF
          CLOUDFLARE_ACCOUNT_ID="${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}"
          CLOUDFLARE_AI_GATEWAY_TOKEN="${{ secrets.CLOUDFLARE_AI_GATEWAY_TOKEN }}"
          JWT_SECRET="${{ secrets.JWT_SECRET }}"
          GOOGLE_AI_STUDIO_API_KEY="${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}"
          RESEND_API_KEY="${{ secrets.RESEND_API_KEY }}"
          WEBHOOK_SECRET="${{ secrets.WEBHOOK_SECRET }}"
          EOF
        if: ${{ secrets.JWT_SECRET != '' }}
        continue-on-error: true

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy

      - name: Update secrets
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: secret bulk .prod.vars
        continue-on-error: true
