/* eslint-disable */
// Generated by Wrangler by running `wrangler types --include-runtime false` (hash: 653c76bb199c2e837735e2efc4b24be1)
declare namespace Cloudflare {
	interface GlobalProps {
		mainModule: typeof import("./worker/index");
		durableNamespaces: "CodeGeneratorAgent" | "UserAppSandboxService" | "DORateLimitStore";
	}
	interface Env {
		VibecoderStore: KVNamespace;
		WEBAUTHN_CHALLENGES: KVNamespace;
		TEMPLATES_REPOSITORY: "https://github.com/cloudflare/vibesdk-templates";
		ALLOWED_EMAIL: "jaketdaniels95@gmail.com";
		DISPATCH_NAMESPACE: "vibesdk-default-namespace";
		ENABLE_READ_REPLICAS: "true";
		CLOUDFLARE_AI_GATEWAY: "vibesdk-gateway";
		CUSTOM_DOMAIN: "netm8.com";
		MAX_SANDBOX_INSTANCES: "10";
		SANDBOX_INSTANCE_TYPE: "standard-3";
		USE_CLOUDFLARE_IMAGES: false;
		RP_ID: "netm8.com";
		RP_NAME: "VibeSDK";
		ORIGIN: "https://netm8.com";
		CodeGenObject: DurableObjectNamespace<import("./worker/index").CodeGeneratorAgent>;
		Sandbox: DurableObjectNamespace<import("./worker/index").UserAppSandboxService>;
		DORateLimitStore: DurableObjectNamespace<import("./worker/index").DORateLimitStore>;
		TEMPLATES_BUCKET: R2Bucket;
		DB: D1Database;
		DISPATCHER: DispatchNamespace;
		API_RATE_LIMITER: RateLimit;
		AUTH_RATE_LIMITER: RateLimit;
		AI: Ai;
		CF_VERSION_METADATA: WorkerVersionMetadata;
		ASSETS: Fetcher;
	}
}
interface Env extends Cloudflare.Env {}
type StringifyValues<EnvType extends Record<string, unknown>> = {
	[Binding in keyof EnvType]: EnvType[Binding] extends string ? EnvType[Binding] : string;
};
declare namespace NodeJS {
	interface ProcessEnv extends StringifyValues<Pick<Cloudflare.Env, "TEMPLATES_REPOSITORY" | "ALLOWED_EMAIL" | "DISPATCH_NAMESPACE" | "ENABLE_READ_REPLICAS" | "CLOUDFLARE_AI_GATEWAY" | "CUSTOM_DOMAIN" | "MAX_SANDBOX_INSTANCES" | "SANDBOX_INSTANCE_TYPE" | "USE_CLOUDFLARE_IMAGES" | "RP_ID" | "RP_NAME" | "ORIGIN">> {}
}
